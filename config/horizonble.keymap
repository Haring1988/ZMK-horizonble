/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt {
    flavor = "tap-preferred";
    tapping-term-ms = <100>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_bksp {
            bindings = <&kp BACKSPACE>;
            key-positions = <4 5>;
            layers = <0>;
        };

        combo_ent {
            bindings = <&kp ENTER>;
            key-positions = <16 17>;
            layers = <0>;
        };

        combo_del {
            bindings = <&kp DEL>;
            key-positions = <28 29>;
            layers = <0>;
        };

        combo_altenter {
            bindings = <&kp LC(ENTER)>;
            key-positions = <29 43>;
        };

        combo_tg1 {
            bindings = <&tog 0>;
            key-positions = <47 48>;
        };
    };

    macros {
        macro0: macro0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N2 &kp N0 &kp N0 &kp N6 &kp N8 &kp N8 &kp ENTER>;
            label = "MACRO0";
        };
    };

    behaviors {
        auto_shift: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC     &kp Q      &kp W     &kp E     &kp R         &kp T                           &kp Y      &kp U            &kp I         &kp O     &kp P      &kp BSPC
&kp CAPS    &kp A      &kp S     &kp D     &kp F         &lt 4 G                         &lt 4 H    &kp J            &kp K         &kp L     &kp ENTER  &kp DELETE
&kp LSHIFT  &kp Z      &kp X     &kp C     &kp V         &kp B    &kp HOME  &kp PAGE_UP  &kp N      &kp M            &kp COMMA     &kp DOT   &kp FSLH   &mt RIGHT_SHIFT TAB
&mo 5       &kp LCTRL  &kp LALT  &kp LGUI  &lt 3 DELETE  &mo 1    &kp END   &kp PG_DN    &kp SPACE  &lt 2 BACKSPACE  &kp UP_ARROW  &kp LEFT  &kp DOWN   &kp RIGHT
            >;
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp N1     &kp N2      &kp N3   &kp N4        &kp N5                        &kp N6     &kp N7    &kp N8    &kp N9    &kp N0    &kp BSPC
&kp DELETE  &kp MINUS  &kp EQUAL   &kp F2   &kp F5        &trans                        &kp BSLH   &kp LBKT  &kp RBKT  &kp SEMI  &kp APOS  &kp ENTER
&kp LSHFT   &trans     &kp C_MUTE  &macro0  &kp C_VOL_DN  &kp C_VOL_UP  &trans  &trans  &trans     &trans    &trans    &trans    &trans    &trans
&kp LCTRL   &kp LGUI   &kp LALT    &trans   &trans        &trans        &trans  &trans  &kp SPACE  &kp BSPC  &trans    &trans    &trans    &trans
            >;
        };

        layer_2 {
            bindings = <
&kp LS(GRAVE)  &kp LS(N1)     &kp LS(N2)     &kp LS(N3)  &kp LS(N4)  &kp LS(N5)                               &kp LS(N6)    &kp LS(N7)    &kp LS(N8)     &kp LS(N9)    &kp LS(N0)    &kp BSPC
&trans         &kp LS(MINUS)  &kp LS(EQUAL)  &trans      &trans      &trans                                   &kp LS(BSLH)  &kp LS(LBKT)  &kp LS(RBKT)   &kp LS(SEMI)  &kp LS(APOS)  &kp ENTER
&kp LSHFT      &trans         &trans         &trans      &trans      &trans      &kp INSERT  &kp PRINTSCREEN  &trans        &trans        &kp LS(COMMA)  &kp LS(DOT)   &kp LS(FSLH)  &kp RSHFT
&kp LCTRL      &kp LGUI       &kp LALT       &trans      &trans      &trans      &trans      &trans           &kp SPACE     &kp BSPC      &trans         &trans        &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&bootloader   &trans          &trans        &kp UP_ARROW  &trans        &trans                                       &trans         &trans         &kp UP_ARROW  &trans     &trans  &trans
&trans        &trans          &kp LEFT      &kp DOWN      &kp RIGHT     &trans                                       &trans         &kp LEFT       &kp DOWN      &kp RIGHT  &trans  &trans
&bt BT_SEL 0  &bt BT_SEL 1    &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &trans        &trans     &trans  &trans
&bt BT_CLR    &bt BT_CLR_ALL  &bt BT_NXT    &bt BT_PRV    &out OUT_BLE  &out OUT_USB   &out OUT_TOG   &trans         &trans         &trans         &trans        &trans     &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&kp EQUAL  &kp LS(EQUAL)  &kp MINUS   &kp N7  &kp N8  &kp N9                   &kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6
&trans     &kp LS(N8)     &kp FSLH    &kp N4  &kp N5  &kp N6                   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans     &kp LS(N9)     &kp LS(N0)  &kp N1  &kp N2  &kp N3   &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
&trans     &trans         &trans      &trans  &kp N0  &kp DOT  &trans  &trans  &trans  &trans  &trans  &trans   &trans   &trans
            >;
        };
    };
};
